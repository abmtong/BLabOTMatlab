function Bin= HIP_CompileVelocityHistogram()% This function was written specifically for processing HIP ATP titration% data. It loads several MAT files with processed Velocity data and% compiles Velocity Histograms.%% USE: Bin = HIP_CompileVelocityHistogram()%% Gheorghe Chistol, 18 Aug 2010%% Ask for the ParametersPrompt = {'Hist Lower Limit (bp/sec)','Hist Upper Lim (bp/sec)',...          'Hist Bin Width (bp/sec)','Length of Packaged DNA(bp)','DNA Length Bin Start (bp)',...          'DNA Length Bin End (bp)','DNA Length Bin Width (bp)'};Title = 'Enter the Following Parameters';Lines = 1;Default = {'-100','50','2','21000','15000','20000','1000'};Options.Resize='on'; Options.WindowStyle='normal'; Options.Interpreter='tex';Answer = inputdlg(Prompt, Title, Lines, Default, Options);%Hist parameters refer to the histogram display at the endHistLowerLim = str2num(Answer{1});HistUpperLim = str2num(Answer{2});HistBinWidth = str2num(Answer{3});LengthDNA    = str2num(Answer{4}); %the length of packaged DNABinStart     = str2num(Answer{5});BinEnd       = str2num(Answer{6});BinWidth     = str2num(Answer{7});%% Declare Global Variables for Folder Namesglobal VelocityPath; %declare the folder where MAT files are savedglobal analysisPath;if isempty(VelocityPath) && isempty(analysisPath)   VelocityPath = uigetdir(pwd , 'Select the Folder with processed velocity MAT files');elseif isempty(VelocityPath) && ~isempty(analysisPath)   VelocityPath = uigetdir(analysisPath , 'Select the Folder with processed velocity MAT files');elseif VelocityPath==0   VelocityPath = uigetdir(pwd, 'Select the Folder with processed velocity MAT files');else   VelocityPath = uigetdir(VelocityPath, 'Select the Folder with processed velocity MAT files');end%Select original files, many files can be selected at once[VelFile] = uigetfile([ [VelocityPath '\'] '*.mat'], 'MultiSelect', 'on');Vel.Velocity = [];Vel.Location = []; %initialize the unified velocity data set%process selected files one by oneif ~iscell(VelFile)%if there's only one file    temp=VelFile;    clear VelFile;    VelFile{1}=temp; %make it into a cellend%% Put together all the datafor f=1:length(VelFile) %f stands for File    clear Bins;    load([VelocityPath '\' VelFile{f}]);        Vel.Velocity = [Vel.Velocity Velocity];    Vel.Location = [Vel.Location Location];    disp(['Loaded velocity file ' VelFile]);end%% Finally Assemble all the Data in bins temp = BinStart:BinWidth:BinEnd; %make the bins for binning velocity data based on the length of DNA packagedBin.Start = temp(1:end-1); %starting of each binBin.End   = temp(2:end);   %ending of each binBin.Velocity = []; %will add velocity data as we goBin.Location = []; %will add time data as we goVel.Location = LengthDNA-Vel.Location; %this will be now the length of DNA packaged[Vel.Location Index] = sort(Vel.Location); %sort location in incresing orderVel.Velocity = Vel.Velocity(Index);        %order the velocity accordingly L=length(Bin.Start);for i=1:L    IndLess = Vel.Location < Bin.End(i); %index of the data less than the end of the bin    IndMore = Vel.Location > Bin.Start(i); %index of the data larger than the start of the bin    temp     = IndLess.*IndMore; %index of the data that belongs in this bin    Ind=find(temp==1);    Bin.Velocity{i} = Vel.Velocity(Ind);    Bin.Location{i} = Vel.Location(Ind);end%% Plot the Resultsclose all%figure;%set(gcf,'Units','pixels');%set(gcf,'Position',[350 0 400 700]);HistBins = HistLowerLim:HistBinWidth:HistUpperLim; %x coordinates for the histogram binsL=length(Bin.Start);for i=1:L    figure;    hist(Bin.Velocity{i},HistBins);    MeanVel=mean(Bin.Velocity{i});    StErr  = std(Bin.Velocity{i})/sqrt(length(Bin.Velocity{i}));    title(['DNA packaged:' num2str(Bin.Start(i)) ' to ' num2str(Bin.End(i)) 'bp; Vel=' num2str(MeanVel) '\pm' num2str(StErr)]);    xlabel(['Velocity (bp/sec)']);    ylabel('Occurences');    set(gca,'XLim',[HistLowerLim HistUpperLim]);    set(gca,'YLimMode','auto');end