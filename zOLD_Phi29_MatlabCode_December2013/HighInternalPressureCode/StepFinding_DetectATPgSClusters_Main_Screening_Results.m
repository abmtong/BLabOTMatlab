function [ClusterDuration ClusterSpan] = StepFinding_DetectATPgSClusters_Main_Screening_Results
% This function loads the mat file that has the results of screening
% PauseCluster candidates (as generated by
% StepFinding_DetectATPgSClusters_Main_Screening). If a particular pause
% cluster has been passed the visual screening, then we save its
% span/duration
%
% USE: [ClusterDuration ClusterSpan] = StepFinding_DetectATPgSClusters_Main_Screening_Results
%
% Gheorghe Chistol, 21 September 2011

global analysisPath;
% select the step-finding-results file manually
% *_DetectATPgSClusters_Main_Screened
[File FilePath] = uigetfile([ [analysisPath filesep] '*_DetectATPgSClusters_Main_Screened.mat'], ...
                                'Please select the file that contains screened Pause Clusters','MultiSelect', 'on');
if ~iscell(File)
    temp = File; clear File; File{1}=temp; clear temp;
end

ClusterDuration = [];
ClusterSpan     = [];
% Go through all the Files
for f=1:length(File)
    clear PauseClusters;
    load([FilePath filesep File{f}]);

    % Go through all PauseClusters
    for ph = 1:length(PauseClusters) % ph refers to the phage index
        for fc = 1:length(PauseClusters{ph}) %fc refers to the feedback cycle index
            if isfield(PauseClusters{ph}{fc},'ScreeningVerdict')
                for pc = 1:length(PauseClusters{ph}{fc}) %pc refers to the pause cluster index
                    if PauseClusters{ph}{fc}(pc).ScreeningVerdict==1 
                        ClusterDuration(end+1) = PauseClusters{ph}{fc}(pc).ClusterDuration;
                        ClusterSpan(end+1) = PauseClusters{ph}{fc}(pc).ClusterSpan;
                    end
                end
            end
        end
    end
end
end